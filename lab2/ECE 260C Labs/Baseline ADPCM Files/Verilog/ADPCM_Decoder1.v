// -------------------------------------------------------------
// 
// File Name: Piplined_encoder\adpcm_precision_study\ADPCM_Decoder1.v
// Created: 2022-04-30 14:10:34
// 
// Generated by MATLAB 9.11 and HDL Coder 3.19
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ADPCM_Decoder1
// Source Path: adpcm_precision_study/ADPCM_ECD/ADPCM Decoder1
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ADPCM_Decoder1
          (clk,
           reset,
           enb,
           In1,
           Out1);


  input   clk;
  input   reset;
  input   enb;
  input   signed [1:0] In1;  // sfix2
  output  signed [19:0] Out1;  // sfix20_En16


  reg signed [1:0] Delay1_out1;  // sfix2
  wire signed [19:0] ADPCM_Input_Output_boundary_DTC1_out1;  // sfix20_En16
  wire signed [19:0] Step_Size;  // sfix20_En16
  wire signed [27:0] IntegratorGain_out1;  // sfix28_En24
  wire signed [19:0] Integrator_gain_0_99_out1;  // sfix20_En16
  reg signed [19:0] Delay2_out1;  // sfix20_En16

  // This standalone version has input and output Dflipflops
  // 
  // ADPCM Decoder (also used inside Encoder)


  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 2'sb00;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= In1;
        end
      end
    end



  assign ADPCM_Input_Output_boundary_DTC1_out1 = {{2{Delay1_out1[1]}}, {Delay1_out1, 16'b0000000000000000}};



  Step_Size_Adaptor1 u_Step_Size_Adaptor1 (.clk(clk),
                                           .reset(reset),
                                           .enb(enb),
                                           .in(ADPCM_Input_Output_boundary_DTC1_out1),  // sfix20_En16
                                           .out(Step_Size)  // sfix20_En16
                                           );

  assign IntegratorGain_out1 = 28'sb0000111111011111001110110110;



  Integrator_gain_0_99 u_Integrator_gain_0_99 (.clk(clk),
                                               .reset(reset),
                                               .enb(enb),
                                               .Step_Size(Step_Size),  // sfix20_En16
                                               .LoopGain(IntegratorGain_out1),  // sfix28_En24
                                               .Out1(Integrator_gain_0_99_out1)  // sfix20_En16
                                               );

  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 20'sb00000000000000000000;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= Integrator_gain_0_99_out1;
        end
      end
    end



  assign Out1 = Delay2_out1;

endmodule  // ADPCM_Decoder1

