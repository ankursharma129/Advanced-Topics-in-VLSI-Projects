// -------------------------------------------------------------
// 
// File Name: Piplined_encoder\adpcm_precision_study\ADPCM_ECD.v
// Created: 2022-04-30 14:10:34
// 
// Generated by MATLAB 9.11 and HDL Coder 3.19
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1e-05
// Target subsystem base rate: 1e-05
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1e-05
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// Out1                          ce_out        1e-05
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ADPCM_ECD
// Source Path: adpcm_precision_study/ADPCM_ECD
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ADPCM_ECD
          (clk,
           reset,
           clk_enable,
           in1,
           ce_out,
           Out1);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [19:0] in1;  // sfix20_En16
  output  ce_out;
  output  signed [19:0] Out1;  // sfix20_En16


  wire signed [1:0] adpcm_encoder2_out1;  // sfix2
  wire signed [19:0] ADPCM_Decoder1_out1;  // sfix20_En16


  adpcm_encoder2 u_adpcm_encoder2 (.clk(clk),
                                   .reset(reset),
                                   .enb(clk_enable),
                                   .in1(in1),  // sfix20_En16
                                   .out1(adpcm_encoder2_out1)  // sfix2
                                   );

  ADPCM_Decoder1 u_ADPCM_Decoder1 (.clk(clk),
                                   .reset(reset),
                                   .enb(clk_enable),
                                   .In1(adpcm_encoder2_out1),  // sfix2
                                   .Out1(ADPCM_Decoder1_out1)  // sfix20_En16
                                   );

  assign Out1 = ADPCM_Decoder1_out1;

  assign ce_out = clk_enable;

endmodule  // ADPCM_ECD

