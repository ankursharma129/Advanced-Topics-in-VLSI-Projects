// -------------------------------------------------------------
// 
// File Name: adpcm\adpcm_precision_study\current_previous.v
// Created: 2022-04-30 23:31:54
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: current_previous
// Source Path: adpcm_precision_study/adpcm/ADPCM Decoder1/Step Size Adaptor1/current - previous
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module current_previous
          (clk,
           reset,
           enb,
           In1,
           Out1);


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] In1;  // sfix16_En12
  output  Out1;


  reg signed [15:0] Delay_out1;  // sfix16_En12
  wire signed [16:0] Sum1_sub_cast;  // sfix17_En12
  wire signed [16:0] Sum1_sub_cast_1;  // sfix17_En12
  wire signed [16:0] Sum1_sub_temp;  // sfix17_En12
  wire signed [15:0] Sum1_out1;  // sfix16_En12
  wire signed [15:0] Constant5_out1;  // sfix16_En12
  wire Relational_Operator5_relop1;


  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Delay_out1 <= In1;
        end
      end
    end



  assign Sum1_sub_cast = {In1[15], In1};
  assign Sum1_sub_cast_1 = {Delay_out1[15], Delay_out1};
  assign Sum1_sub_temp = Sum1_sub_cast - Sum1_sub_cast_1;
  assign Sum1_out1 = ((Sum1_sub_temp[16] == 1'b0) && (Sum1_sub_temp[15] != 1'b0) ? 16'sb0111111111111111 :
              ((Sum1_sub_temp[16] == 1'b1) && (Sum1_sub_temp[15] != 1'b1) ? 16'sb1000000000000000 :
              $signed(Sum1_sub_temp[15:0])));



  assign Constant5_out1 = 16'sb0000000000000000;



  assign Relational_Operator5_relop1 = Sum1_out1 == Constant5_out1;



  assign Out1 = Relational_Operator5_relop1;

endmodule  // current_previous

